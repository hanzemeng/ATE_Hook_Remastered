#pragma once

#define PUSH_RAX_R15 0x50, 0x53, 0x51, 0x52, 0x56, 0x57, 0x41, 0x50, 0x41, 0x51, 0x41, 0x52, 0x41, 0x53, 0x41, 0x54, 0x41, 0x55, 0x41, 0x56, 0x41, 0x57
#define POP_R15_RAX  0x41, 0x5F, 0x41, 0x5E, 0x41, 0x5D, 0x41, 0x5C, 0x41, 0x5B, 0x41, 0x5A, 0x41, 0x59, 0x41, 0x58, 0x5F, 0x5E, 0x5A, 0x59, 0x5B, 0x58
#define PUSH_REGISTERS_INSTRUCTIONS_SIZE 22
#define PROCESS_INSTRUCTIONS_SIZE 128

unsigned char m_game_process_jump[] = {
	0x50, 0x48, 0xB8, 0x88, 0x77, 0x66, 0x55, 0x44, 0x33, 0x22, 0x11, 0xFF, 0xE0, // jump to m_game_process_process+0
	0x58, 0x90, 0x90, 0x90
};

unsigned char m_game_process_process[] = {
	0x58, PUSH_RAX_R15, 0x55, 0x48, 0x81, 0xEC, 0x80, 0x00, 0x00, 0x00, 0x48, 0x89, 0xE5,
	0x48, 0xB8, 0x88, 0x77, 0x66, 0x55, 0x44, 0x33, 0x22, 0x11, 0xFF, 0xD0, // call OnGameProcess
	0x48, 0x81, 0xC4, 0x80, 0x00, 0x00, 0x00, 0x5D, POP_R15_RAX,
	0xFF, 0x50, 0x48, 0x48, 0x8B, 0x4B, 0x18, 0x48, 0x8B, 0xD3, 0x0F, 0x28, 0xF0, 0xF3, 0x0F, 0x5C, 0xF8, // do original_game_process instruction
	0x50, 0x48, 0xB8, 0x88, 0x77, 0x66, 0x55, 0x44, 0x33, 0x22, 0x11, 0xFF, 0xE0 // jump to original_game_process+13
};

unsigned char m_text_process_jump[] = {
	0x50, 0x48, 0xB8, 0x88, 0x77, 0x66, 0x55, 0x44, 0x33, 0x22, 0x11, 0xFF, 0xE0, // jump to m_text_process_process+0
	0x58, 0x90, 0x90, 0x90
};

unsigned char m_text_process_process[] = {
	0x58, PUSH_RAX_R15, 0x55, 0x48, 0x81, 0xEC, 0x80, 0x00, 0x00, 0x00, 0x48, 0x89, 0xE5, 0x48, 0x89, 0xC1,
	0x48, 0xB8, 0x88, 0x77, 0x66, 0x55, 0x44, 0x33, 0x22, 0x11, 0xFF, 0xD0, // call OnTextProcess
	0x48, 0x81, 0xC4, 0x80, 0x00, 0x00, 0x00, 0x5D, POP_R15_RAX,
	0x48, 0x83, 0xFA, 0x10, 0x72, 0x03, 0x49, 0x8B, 0x00, 0x48, 0x8D, 0x50, 0x01, 0x45, 0x0F, 0xB6, 0xC1, // do original_text_process instruction
	0x50, 0x48, 0xB8, 0x88, 0x77, 0x66, 0x55, 0x44, 0x33, 0x22, 0x11, 0xFF, 0xE0 // jump to original_text_process+13
};

unsigned char m_text_render[] = {
	0x90, 0x90, 0x90, 0x90, 0x90
};